  def invertTree(self, root: TreeNode) -> TreeNode:
        # Base case: if the node is null, just return null
        if root is None:
            return None
        
        # Swap the left and right children
        root.left, root.right = root.right, root.left
        
        # Recursively invert the left subtree
        self.invertTree(root.left)
        # Recursively invert the right subtree
        self.invertTree(root.right)
        
        # Return the root of the inverted tree
        return root
